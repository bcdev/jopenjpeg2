package jopenjpeg2.jna;

import com.sun.jna.*;

/**
 * JNA Wrapper for library <b>jopenjpeg2</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Jopenjpeg2Library extends Library {
    public static final String JNA_LIBRARY_NAME = "jopenjpeg2";
//    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Jopenjpeg2Library.JNA_LIBRARY_NAME);
    public static final Jopenjpeg2Library INSTANCE = (Jopenjpeg2Library) Native.loadLibrary(Jopenjpeg2Library.JNA_LIBRARY_NAME, Jopenjpeg2Library.class);

    boolean jopj_read_img_region_data(String filepath, int resolution, int comp_index, int x0, int y0, int w, int h, short[] tile_data);

    jopj_Img jopj_open_img(String filepath, int resolution);

    boolean jopj_read_img_tile_data(jopj_Img img, int comp_index, int tile_index, short[] tile_data);

    void jopj_dispose_img(jopj_Img img);

    jopj_ImgInfo jopj_get_img_info(jopj_Img img);

    void jopj_dispose_img_info(jopj_ImgInfo img_info);
}
